syntax = "proto3";
package jasper.vault.v1;

import "gogoproto/gogo.proto";
option go_package = "github.com/JasperNetwork/jasper/x/vault/types";

// PublicKeyNodeIdPair defines an instance that records pairing consisting of
// publicKey and nodeId
message PublicKeyNodeIdPair {
  option (gogoproto.equal) = true;
  // publicKey of vault logic
  string public_key = 1;
  // node id of jasper chain
  string node_id = 2;
}

// SignOptionPayment defines an instance that records sign option payment consisting of
// option information
message SignOptionPayment {
  option (gogoproto.equal) = true;
  // order id of option payment
  string order_id = 1;
  // from address to the payment
  string from = 2;
  // to address of the payment
  string to = 3;
  // amount for the payment
  string amount = 4;
  // chain information of the chain
  string chain = 5;
  // details of the transaction
  string payload = 6;
  // provide the proofs to support the sign
  string proofs = 7;
  // signature from the node
  string signature = 8;
  // memo of the payment
  string  memo = 9;
  // sender of the sign option
  string sender = 10;
}


// SignOptionPrice defines an instance that records sign option payment consisting of
// option information
message SignOptionPrice {
  option (gogoproto.equal) = true;

  // price id for retrieve
  string id = 1;

  // product type include:0-degen 1-swap 2-pro
  uint32 productType = 2;

  // option asset address:eth btc
  string optionAsset = 3;

  // strike price for option
  uint32 strikePrice = 4;

  // option expiration time
  uint32 expireDate = 5;

  // Option type: 0-call 1-put;
  uint32 optionType = 6;

  // premium asset
  string premiumAsset = 7;

  // premium fee
  uint32 premiumFee = 8;

  // timestamp
  uint32 timestamp = 9;

  // sender of the sign option
  repeated string oracleSign = 10;

}

// SignOptionPrice defines an instance that records sign option payment consisting of
// option information
message SignOptionPrices {
  option (gogoproto.equal) = true;

  // price id for retrieve
  string optionAsset = 1;

  // valid time of sign time
  uint32 validTime = 2;

  repeated SignOptionPrice signOptionList = 3;

}

